# This code is used to convert an Excel file generated by Origin to JSON format.
# Before using, please delete the first row in the Excel file.

import pandas as pd
import json

def generate_json(logger, file, Type, Node, Device, Vds, L, W, Name, Link, Info, Info_record, output):
    # Read the Excel file
    df = pd.read_excel(output + '/'  +file)

    # Get the total number of columns
    num_columns = df.shape[1]

    required_length = num_columns // 3  
    if len(Info_record) < required_length:
        raise ValueError(f"Length of Info_record ({len(Info_record)}) is less than the required length ({required_length})")
    # List to store all records
    records = []

    # Process data, every three columns as a group: Vgs, Ids, empty
    for i in range(0, num_columns, 3):  # Step size is 3
        # Extract Vgs and Ids data for each group
        Vgs = df.iloc[:, i].tolist()
        Ids = df.iloc[:, i+1].tolist()

        current_info_value = Info_record[i // 3]
        
        # Create a record for each group
        record = {
            Info: current_info_value,
            "Vgs": Vgs,
            "Ids": Ids
        }
        
        # Add to the records list
        records.append(record)

    # Sort records by Info_record if all are digits
    if all(str(record[Info]).isdigit() for record in records):
        records.sort(key=lambda x: float(x[Info]))
    device = Device.split('_')
    # Build the complete JSON data structure
    print(W, L, Vds)
    data = {
        "Type": Type,
        "Node": float(Node) if Node != "nan" else 0,
        "Device": device,
        # "Temp": Temp,
        "Vds": float(Vds) if Vds != "nan" else 0,
        "L": float(L) if L != "nan" else 0,
        "W": float(W) if W != "nan" else 0,
        # "Nfin": Nfin,
        "Title": Name,
        "DOI": Link,
        "Records": records
    }

    output_file = output + "/output.json" 
    # Write the data to a JSON file
    with open(output_file, 'w') as f:
        json.dump(data, f, indent=4)

    logger.info("JSON file has been generated!")
    return output_file
